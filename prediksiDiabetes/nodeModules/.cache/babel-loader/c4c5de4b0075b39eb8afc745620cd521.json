{"ast":null,"code":"var _jsxFileName = \"D:\\\\KULIAH SEMESTER 7\\\\SKRIPSI\\\\Code\\\\Skripsi_Gabungan\\\\prediksi_diabetesmellitus_id3\\\\src\\\\Component\\\\ResultComponent\\\\ResultComponent.jsx\";\nimport React from 'react';\nimport './ResultComponent.css';\nimport FormTest from '../FormTest/FormTest';\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.back_predict = () => {\n      var x = document.getElementById(\"hasil\");\n      var y = document.getElementById(\"prediksi\"); //if (x.style.display === \"none\") {\n\n      x.style.display = \"none\";\n      y.style.display = \"inline-block\"; // } else {\n      //   x.style.display = \"none\";\n      // }\n\n      this.callapi();\n    };\n\n    this.state = {\n      hasilDiabetes: 'Selamat! Anda Tidak terkena diabetes Mellitus.',\n      hasilImt: '28.1',\n      hasilObesitas: 'Berat badan anda berlebihan (cenderung obesitas)',\n      hasilTekananDarah: 'Anda mengalami Hipotensi (tekanan darah rendah).'\n    };\n  }\n\n  callapi() {\n    fetch(\"http://localhost:9000/api\").then(res => res.text()).then(res => this.setState({\n      hasilDiabetes: res\n    }));\n  }\n\n  componentWillMount() {\n    //console.log(FormTest.cek_Kolom());\n    this.callapi();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"result\",\n      id: \"hasil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Hasil Prediksi\"), React.createElement(\"p\", {\n      className: \"hasil_prediksi\",\n      id: \"hasil_diabetes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Status Diabetes: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), this.state.hasilDiabetes, \" \")), React.createElement(\"p\", {\n      className: \"hasil_prediksi\",\n      id: \"hasil_imt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"IMT (Index Masa Tubuh): \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), this.state.hasilImt, \" \")), React.createElement(\"p\", {\n      className: \"hasil_prediksi\",\n      id: \"hasil_obesitas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Status Obesitas: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), this.state.hasilObesitas, \" \")), React.createElement(\"p\", {\n      className: \"hasil_prediksi\",\n      id: \"hasil_tekanan_darah\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Status Tekanan Darah: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), this.state.hasilTekananDarah, \" \")), React.createElement(\"button\", {\n      className: \"button_ulang\",\n      onClick: this.back_predict,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Mulai Ulang\"));\n  }\n\n}\n\nexport default Result;","map":{"version":3,"sources":["D:/KULIAH SEMESTER 7/SKRIPSI/Code/Skripsi_Gabungan/prediksi_diabetesmellitus_id3/src/Component/ResultComponent/ResultComponent.jsx"],"names":["React","FormTest","Result","Component","constructor","props","back_predict","x","document","getElementById","y","style","display","callapi","state","hasilDiabetes","hasilImt","hasilObesitas","hasilTekananDarah","fetch","then","res","text","setState","componentWillMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAsBlBC,YAtBkB,GAsBH,MAAK;AAChB,UAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAR;AACA,UAAIC,CAAC,GAAGF,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAR,CAFgB,CAGhB;;AACEF,MAAAA,CAAC,CAACI,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACAF,MAAAA,CAAC,CAACC,KAAF,CAAQC,OAAR,GAAkB,cAAlB,CALc,CAMhB;AACA;AACA;;AACA,WAAKC,OAAL;AACH,KAhCiB;;AAGd,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,gDADN;AAETC,MAAAA,QAAQ,EAAC,MAFA;AAGTC,MAAAA,aAAa,EAAC,kDAHL;AAITC,MAAAA,iBAAiB,EAAC;AAJT,KAAb;AAMH;;AAEDL,EAAAA,OAAO,GAAE;AACLM,IAAAA,KAAK,CAAC,2BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI,KAAKE,QAAL,CAAc;AAACR,MAAAA,aAAa,EAAGM;AAAjB,KAAd,CAFb;AAGH;;AAEDG,EAAAA,kBAAkB,GAAE;AAChB;AACA,SAAKX,OAAL;AACH;;AAcDY,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,EAAE,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADR,EAEQ;AAAG,MAAA,SAAS,EAAC,gBAAb;AAA8B,MAAA,EAAE,EAAC,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,EAA8B,KAAKX,KAAL,CAAWC,aAAzC,MAAlD,CAFR,EAGQ;AAAG,MAAA,SAAS,EAAC,gBAAb;AAA8B,MAAA,EAAE,EAAC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,EAAqC,KAAKD,KAAL,CAAWE,QAAhD,MAA7C,CAHR,EAIQ;AAAG,MAAA,SAAS,EAAC,gBAAb;AAA8B,MAAA,EAAE,EAAC,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,EAA8B,KAAKF,KAAL,CAAWG,aAAzC,MAAlD,CAJR,EAKQ;AAAG,MAAA,SAAS,EAAC,gBAAb;AAA8B,MAAA,EAAE,EAAC,qBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,EAAmC,KAAKH,KAAL,CAAWI,iBAA9C,MAAvD,CALR,EAMQ;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,KAAKZ,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANR,CADJ;AAUH;;AA9C+B;;AAiDpC,eAAeJ,MAAf","sourcesContent":["import React from 'react';\r\nimport './ResultComponent.css';\r\nimport FormTest from '../FormTest/FormTest';\r\n\r\nclass Result extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            hasilDiabetes: 'Selamat! Anda Tidak terkena diabetes Mellitus.',\r\n            hasilImt:'28.1',\r\n            hasilObesitas:'Berat badan anda berlebihan (cenderung obesitas)',\r\n            hasilTekananDarah:'Anda mengalami Hipotensi (tekanan darah rendah).',\r\n        }\r\n    }\r\n\r\n    callapi(){\r\n        fetch(\"http://localhost:9000/api\")\r\n        .then(res => res.text())\r\n        .then(res => this.setState({hasilDiabetes : res}));\r\n    }\r\n\r\n    componentWillMount(){\r\n        //console.log(FormTest.cek_Kolom());\r\n        this.callapi();\r\n    }\r\n\r\n    back_predict = ()=> {\r\n        var x = document.getElementById(\"hasil\");\r\n        var y = document.getElementById(\"prediksi\");\r\n        //if (x.style.display === \"none\") {\r\n          x.style.display = \"none\";\r\n          y.style.display = \"inline-block\";\r\n        // } else {\r\n        //   x.style.display = \"none\";\r\n        // }\r\n        this.callapi();\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"result\" id=\"hasil\">\r\n                    <h2>Hasil Prediksi</h2>\r\n                    <p className=\"hasil_prediksi\" id=\"hasil_diabetes\"><a>Status Diabetes: <br></br>{this.state.hasilDiabetes} </a></p>\r\n                    <p className=\"hasil_prediksi\" id=\"hasil_imt\"><a>IMT (Index Masa Tubuh): <br></br>{this.state.hasilImt} </a></p>\r\n                    <p className=\"hasil_prediksi\" id=\"hasil_obesitas\"><a>Status Obesitas: <br></br>{this.state.hasilObesitas} </a></p>\r\n                    <p className=\"hasil_prediksi\" id=\"hasil_tekanan_darah\"><a>Status Tekanan Darah: <br></br>{this.state.hasilTekananDarah} </a></p>\r\n                    <button className=\"button_ulang\" onClick={this.back_predict}>Mulai Ulang</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Result;\r\n"]},"metadata":{},"sourceType":"module"}